name: Build and test

on:
  push:
  pull_request:

env: 
  CARGO_TERM_COLOR: always
  CARGO_TERM_QUIET: true
  CARGO_OUTPUT_FORMAT: short
  LETMEIN_DISABLE_SECCOMP: 1
  IN_CI: true

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    container:
      image: rust:alpine
    steps:
      - uses: actions/checkout@v4
      
      - name: Debug Container Environment
        run: |
          echo "PATH=$PATH"
          ls -la /bin || echo "/bin not accessible"
          which sh || echo "sh not found in PATH"
          which bash || echo "bash not found in PATH"
          find / -name sh 2>/dev/null || echo "No sh found"
          find / -name bash 2>/dev/null || echo "No bash found"
          cat /etc/os-release || echo "OS release info not available"
        shell: /bin/sh
      
      - name: Install dependencies
        run: |
          apk add --no-cache \
            build-base \
            curl \
            git \
            nftables \
            sudo \
            libcap \
            bash
        shell: /bin/sh
      
      - name: Diagnostics
        run: |
          pwd
          ls -la
          echo "Current directory contents:"
          ls -la .
          echo "Script permissions:"
          [ -f "./test.sh" ] && echo "File exists" || echo "File does not exist"
          [ -x "./test.sh" ] && echo "File is executable" || echo "File is not executable"
          file ./test.sh || echo "Cannot determine file type"
          head -n 1 ./test.sh || echo "Cannot read file"
          chmod +x ./test.sh
        shell: /bin/sh

      - name: Run tests
        run: |
          echo "Ex√©cution avec bash explicitement:"
          bash ./test.sh --ci knock close
        shell: /bin/sh
        env:
          PATH: "/usr/local/cargo/bin:$PATH"
          CARGO_HOME: "/usr/local/cargo"



  # client_builds:
  #   name: Build clients
  #   strategy:
  #     matrix:
  #       os:
  #         - windows-latest
  #         - macos-latest
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v4
      
  #     - name: Install Rust
  #       uses: dtolnay/rust-toolchain@1.81
  #       with:
  #         components: clippy
      
  #     - name: Build and test client packages
  #       run: |
  #         cargo build -q --package letmein
  #         cargo clippy --package letmein -- --deny warnings
  #         cargo test --package letmein
  #         cargo test --package letmein-conf
  #         cargo test --package letmein-proto

