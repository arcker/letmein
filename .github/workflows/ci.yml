name: Build and test

on:
  push:
  pull_request:

env: 
  CARGO_TERM_COLOR: always
  CARGO_TERM_QUIET: true
  CARGO_OUTPUT_FORMAT: short
  LETMEIN_DISABLE_SECCOMP: 1

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    container:
      image: rust:alpine
      options: --privileged --cap-add=NET_ADMIN --cap-add=SYS_ADMIN --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          apk add --no-cache \
            nftables \
            iproute2 \
            sudo \
            bash \
            musl-dev \
            gcc \
            openssl

      - name: Verify environment
        run: |
          echo "PATH: $PATH"
          which cargo || echo "cargo not found in PATH"
          cargo --version || echo "cargo command failed"
          rustc --version || echo "rustc command failed"

      - name: Build project
        run: cargo build -q

      - name: Fix build script
        run: |
          # Ajouter une ligne au d√©but du script pour l'export de PATH
          if [ -f "./build.sh" ]; then
            sed -i '1a export PATH=$PATH:/usr/local/cargo/bin' ./build.sh
            chmod +x ./build.sh
          fi

      - name: Run tests
        run: |
          chmod +x ./test.sh
          ./test.sh --local knock close

  client_builds:
    name: Build clients
    strategy:
      matrix:
        os:
          - windows-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@1.81
        with:
          components: clippy
      
      - name: Build and test client packages
        run: |
          cargo build -q --package letmein
          cargo clippy --package letmein -- --deny warnings
          cargo test --package letmein
          cargo test --package letmein-conf
          cargo test --package letmein-proto

