name: Build and test

on:
  push:
  pull_request:

env: 
  CARGO_TERM_COLOR: always
  CARGO_TERM_QUIET: true
  CARGO_OUTPUT_FORMAT: short
  LETMEIN_DISABLE_SECCOMP: 1
  IN_CI: true

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    container:
      image: rust:alpine
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          apk add --no-cache \
            nftables \
            iproute2 \
            build-base \
            curl \
            git \
            libcap \
            sudo
      
      - name: Diagnostics
        run: |
          pwd
          ls -la
          echo "Current directory contents:"
          ls -la .
          echo "Script permissions:"
          [ -f "./test.sh" ] && echo "File exists" || echo "File does not exist"
          [ -x "./test.sh" ] && echo "File is executable" || echo "File is not executable"

      - name: Run tests
        run: |
          echo "Contenu du shebang:"
          head -n 1 ./test.sh
          echo "Tentative d'ex√©cution avec sh:"
          sh ./test.sh --ci knock close

  client_builds:
    name: Build clients
    strategy:
      matrix:
        os:
          - windows-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@1.81
        with:
          components: clippy
      
      - name: Build and test client packages
        run: |
          cargo build -q --package letmein
          cargo clippy --package letmein -- --deny warnings
          cargo test --package letmein
          cargo test --package letmein-conf
          cargo test --package letmein-proto

