name: Build and test

on:
  push:
  pull_request:

env: 
  CARGO_TERM_COLOR: always
  CARGO_TERM_QUIET: true
  CARGO_OUTPUT_FORMAT: short
  LETMEIN_DISABLE_SECCOMP: 1

jobs:
  full_tests:
    name: Compile and test
    strategy:
      matrix:
        toolchain:
          - 1.85
    runs-on: ubuntu-latest
    steps:   
      - name: Build project
        run: cargo build -q

      - name: Run tests
        run: |
          # Utiliser le script unifié test.sh au lieu de run-tests.sh directement
          # Cette approche est cohérente avec l'exécution locale des tests
          sudo -E ./test.sh --docker knock close

  macos_windows_build:
    name: Client only
    strategy:
      matrix:
        toolchain:
          - 1.85
        os:
          - windows-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - run: rustup update ${{ matrix.toolchain }}
      - run: rustup default ${{ matrix.toolchain }}
      - run: rustup component add clippy
      - run: cargo build -q --package letmein
      - run: cargo clippy --package letmein -- --deny warnings
      - run: cargo clippy --tests --package letmein -- --deny warnings
      - run: cargo test --package letmein
      - run: cargo test --package letmein-conf
      - run: cargo test --package letmein-proto

  simple-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    container:
      image: rust:alpine
      options: --privileged --cap-add=NET_ADMIN --dns 8.8.8.8 --dns 1.1.1.1 --cap-add=SYS_ADMIN --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies and run tests
        run: |
          ./test.sh --docker knock close

