FROM rust:alpine

# Installation des dépendances nécessaires
RUN apk add --no-cache \
    build-base \
    curl \
    git \
    nftables \
    iptables \
    sudo \
    libcap \
    strace \
    procps \
    shadow \
    && echo "Installation des dépendances terminée"

# Installation de clippy pour l'analyse du code
RUN rustup component add clippy

# Configurer sudoers pour permettre l'exécution de plusieurs commandes sans mot de passe
RUN echo "ALL ALL=(ALL) NOPASSWD: /sbin/nft, /usr/bin/strace" >> /etc/sudoers

# Préparation des répertoires pour nftables et letmein
RUN mkdir -p /etc/nftables /run/letmeinfwd /run/letmeind /var/run/letmeind /var/run/letmeinfwd \
    && chmod 777 /run/letmeinfwd /run/letmeind /var/run/letmeind /var/run/letmeinfwd

# Créer un fichier de configuration nftables minimal (pour référence seulement)
RUN echo '#!/usr/sbin/nft -f' > /etc/nftables/basic.conf && \
    echo 'flush ruleset' >> /etc/nftables/basic.conf && \
    echo 'table inet filter {' >> /etc/nftables/basic.conf && \
    echo '  chain input { type filter hook input priority 0; policy accept; }' >> /etc/nftables/basic.conf && \
    echo '  chain forward { type filter hook forward priority 0; policy accept; }' >> /etc/nftables/basic.conf && \
    echo '  chain output { type filter hook output priority 0; policy accept; }' >> /etc/nftables/basic.conf && \
    echo '  chain LETMEIN-INPUT { type filter hook input priority 100; policy accept; }' >> /etc/nftables/basic.conf && \
    echo '  chain LETMEIN-OUTPUT { type filter hook output priority 100; policy accept; }' >> /etc/nftables/basic.conf && \
    echo '}' >> /etc/nftables/basic.conf && \
    chmod +x /etc/nftables/basic.conf

# Créer un script d'initialisation pour configurer l'environnement
RUN echo '#!/bin/sh' > /init-env.sh && \
    echo '' >> /init-env.sh && \
    echo '# Afficher l'"'"'état de l'"'"'environnement' >> /init-env.sh && \
    echo 'echo "=== Configuration de l'"'"'environnement ==="' >> /init-env.sh && \
    echo 'echo "LETMEIN_DISABLE_SECCOMP: $LETMEIN_DISABLE_SECCOMP"' >> /init-env.sh && \
    echo 'echo "==============================="' >> /init-env.sh && \
    echo '' >> /init-env.sh && \
    echo '# Exécuter la commande fournie' >> /init-env.sh && \
    echo 'exec "$@"' >> /init-env.sh && \
    chmod +x /init-env.sh

# Créer un utilisateur et groupe letmeind pour les tests
RUN groupadd -r letmeind && useradd -r -g letmeind -d /var/run/letmeind letmeind

# Définir le répertoire de travail
WORKDIR /app

# Exportons les variables d'environnement pour les tests
ENV RUST_BACKTRACE=1

# Définir le point d'entrée pour exécuter les tests via notre script d'initialisation
ENTRYPOINT ["/init-env.sh", "./tests/run-tests.sh"]
